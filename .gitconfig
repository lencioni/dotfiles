[alias]
	st = status
	ci = commit
	co = checkout
	b = branch

	amend = commit --amend
	graph = log --oneline --graph
	oneline = log --oneline
	patch = add --patch
	refresh = "!BRANCH=$(git symbolic-ref --short refs/remotes/origin/HEAD | cut -d/ -f2); git fetch origin \"$BRANCH\" && git rebase \"origin/$BRANCH\""
	delete-merged = "!BRANCH=$(git symbolic-ref --short refs/remotes/origin/HEAD | cut -d/ -f2); git branch --merged | egrep -v \"(^\\*|$BRANCH)\" | xargs git branch --delete"
	reword = commit --amend --only -- # Requires Git 1.7.11.3+
	showmsg = log --format=%B -n 1
	su = submodule update --init

	# git-who tells you who the authors are. It is generally most useful when
	# given a path:
	#
	#   git who -- path/to/file
	who = "!f() { \
		git log --follow --ignore-all-space --pretty=format:'%Cgreen%<(30)%aN%Creset %Cblue<%aE>%Creset' \"${@-HEAD}\" \
		| nl | sort --key=2 | uniq -c -f 1 | sort --numeric-sort --key=2 \
		| awk '{$2=\"\"; print $0}'; \
	}; f"

[color]
	ui = auto

[color "diff-highlight"]
	oldNormal = "red bold"
	oldHighlight = "red bold 52"
	newNormal = "green bold"
	newHighlight = "green bold 22"

[color "status"]
	untracked = blue

[core]
	attributesfile = ~/.gitattributes
	editor = nvim
	excludesfile = ~/.gitexcludes # Global gitignore

	# -i ignore case in searches
	# -F auto exit if everything fits in one screen
	# -M verbose prompt
	# -R output ANSI color escape sequences in raw form
	# -X disable sending termcap init and deinit to terminal
	pager = zsh -c 'diff-highlight | less -iFMRX' -
	precomposeunicode = true

[delta]
	plus-style = "syntax #012800"
	minus-style = "syntax #340001"
	syntax-theme = Monokai Extended
	navigate = true

[diff]
	algorithm = histogram

	# More readable diffs
	# Added in Git 2.9.0
	compactionHeuristic = true

[help]
	autocorrect = 10
	# $ git lgo
	# WARNING: You called a Git command named 'lgo', which does not exist.
	# Continuing under the assumption that you meant 'log'
	# in 1.0 seconds automatically...

[log]
	decorate = short

[merge]
	conflictStyle = diff3

[pager]
	show-branch = true
	status = true # Use pager for `git status`

[protocol]
	version = 2 # Added in Git 2.18.0.

[push]
	default = current

[rebase]
	autoSquash = true
	autoStash = true
	updateRefs = true

# Reuse recorded resolution of conflicted merges
# see `man git-rerere'
[rerere]
	enabled = true

[status]
	submodulesummary = true

[submodule]
	fetchJobs = 4 # Added in Git 2.9.0.

[user]
	email = joe.lencioni@gmail.com
	name = Joe Lencioni

# Ignored by Git older than 1.7.10
[include]
	path = .gitconfig.local
[merge "npm-merge-driver"]
	name = automatically merge npm lockfiles
	driver = npx npm-merge-driver merge %A %O %B %P
